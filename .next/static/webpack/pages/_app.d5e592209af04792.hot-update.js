"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/@fake-db/auth/jwt.ts":
/*!**********************************!*\
  !*** ./src/@fake-db/auth/jwt.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_fake_db_mock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/@fake-db/mock */ \"./src/@fake-db/mock.ts\");\n/* harmony import */ var src_configs_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/configs/auth */ \"./src/configs/auth.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// ** JWT import\n\n// ** Mock Adapter\n\n// ** Default AuthConfig\n\nconst users = [\n    {\n        id: 1,\n        role: \"admin\",\n        password: \"admin\",\n        fullName: \"John Doe\",\n        username: \"johndoe\",\n        email: \"admin@aerbag.comadmin@aerbag.com\"\n    },\n    {\n        id: 2,\n        role: \"client\",\n        password: \"client\",\n        fullName: \"Jane Doe\",\n        username: \"janedoe\",\n        email: \"client@aerbag.com\"\n    }\n];\n// ! These two secrets should be in .env file and not in any other file\nconst jwtConfig = {\n    secret: process.env.NEXT_PUBLIC_JWT_SECRET,\n    expirationTime: process.env.NEXT_PUBLIC_JWT_EXPIRATION,\n    refreshTokenSecret: process.env.NEXT_PUBLIC_JWT_REFRESH_TOKEN_SECRET\n};\nsrc_fake_db_mock__WEBPACK_IMPORTED_MODULE_1__[\"default\"].onPost(\"/jwt/login\").reply((request)=>{\n    const { email , password  } = JSON.parse(request.data);\n    let error = {\n        email: [\n            \"Something went wrong\"\n        ]\n    };\n    const user = users.find((u)=>u.email === email && u.password === password);\n    if (user) {\n        const accessToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n            id: user.id\n        }, jwtConfig.secret, {\n            expiresIn: jwtConfig.expirationTime\n        });\n        const response = {\n            accessToken,\n            userData: {\n                ...user,\n                password: undefined\n            }\n        };\n        return [\n            200,\n            response\n        ];\n    } else {\n        error = {\n            email: [\n                \"email or Password is Invalid\"\n            ]\n        };\n        return [\n            400,\n            {\n                error\n            }\n        ];\n    }\n});\nsrc_fake_db_mock__WEBPACK_IMPORTED_MODULE_1__[\"default\"].onPost(\"/jwt/register\").reply((request)=>{\n    if (request.data.length > 0) {\n        const { email , password , username  } = JSON.parse(request.data);\n        const isEmailAlreadyInUse = users.find((user)=>user.email === email);\n        const isUsernameAlreadyInUse = users.find((user)=>user.username === username);\n        const error = {\n            email: isEmailAlreadyInUse ? \"This email is already in use.\" : null,\n            username: isUsernameAlreadyInUse ? \"This username is already in use.\" : null\n        };\n        if (!error.username && !error.email) {\n            const { length  } = users;\n            let lastIndex = 0;\n            if (length) {\n                lastIndex = users[length - 1].id;\n            }\n            const userData = {\n                id: lastIndex + 1,\n                email,\n                password,\n                username,\n                avatar: null,\n                fullName: \"\",\n                role: \"admin\"\n            };\n            users.push(userData);\n            const accessToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n                id: userData.id\n            }, jwtConfig.secret);\n            const user = {\n                ...userData\n            };\n            delete user.password;\n            const response = {\n                accessToken\n            };\n            return [\n                200,\n                response\n            ];\n        }\n        return [\n            200,\n            {\n                error\n            }\n        ];\n    } else {\n        return [\n            401,\n            {\n                error: \"Invalid Data\"\n            }\n        ];\n    }\n});\nsrc_fake_db_mock__WEBPACK_IMPORTED_MODULE_1__[\"default\"].onGet(\"/auth/me\").reply((config)=>{\n    // ** Get token from header\n    // @ts-ignore\n    const token = config.headers.Authorization;\n    // ** Default response\n    let response = [\n        200,\n        {}\n    ];\n    // ** Checks if the token is valid or expired\n    jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, jwtConfig.secret, (err, decoded)=>{\n        // ** If token is expired\n        if (err) {\n            // ** If onTokenExpiration === 'logout' then send 401 error\n            if (src_configs_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].onTokenExpiration === \"logout\") {\n                // ** 401 response will logout user from AuthContext file\n                response = [\n                    401,\n                    {\n                        error: {\n                            error: \"Invalid User\"\n                        }\n                    }\n                ];\n            } else {\n                // ** If onTokenExpiration === 'refreshToken' then generate the new token\n                const oldTokenDecoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().decode(token, {\n                    complete: true\n                });\n                // ** Get user id from old token\n                // @ts-ignore\n                const { id: userId  } = oldTokenDecoded.payload;\n                // ** Get user that matches id in token\n                const user = users.find((u)=>u.id === userId);\n                // ** Sign a new token\n                const accessToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n                    id: userId\n                }, jwtConfig.secret, {\n                    expiresIn: jwtConfig.expirationTime\n                });\n                // ** Set new token in localStorage\n                window.localStorage.setItem(src_configs_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].storageTokenKeyName, accessToken);\n                const obj = {\n                    userData: {\n                        ...user,\n                        password: undefined\n                    }\n                };\n                // ** return 200 with user data\n                response = [\n                    200,\n                    obj\n                ];\n            }\n        } else {\n            // ** If token is valid do nothing\n            // @ts-ignore\n            const userId = decoded.id;\n            // ** Get user that matches id in token\n            const userData = JSON.parse(JSON.stringify(users.find((u)=>u.id === userId)));\n            delete userData.password;\n            // ** return 200 with user data\n            response = [\n                200,\n                {\n                    userData\n                }\n            ];\n        }\n    });\n    return response;\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/@fake-db/auth/jwt.ts\n"));

/***/ })

});