"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/@core/theme/palette/index.ts":
/*!******************************************!*\
  !*** ./src/@core/theme/palette/index.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// ** Type Imports\nconst DefaultPalette = (mode, skin)=>{\n    // ** Vars\n    const whiteColor = \"#FFF\";\n    const lightColor = \"47, 43, 61\";\n    const darkColor = \"208, 212, 241\";\n    const darkPaperBgColor = \"#2F3349\";\n    const mainColor = mode === \"light\" ? lightColor : darkColor;\n    const defaultBgColor = ()=>{\n        if (skin === \"bordered\" && mode === \"light\") {\n            return whiteColor;\n        } else if (skin === \"bordered\" && mode === \"dark\") {\n            return darkPaperBgColor;\n        } else if (mode === \"light\") {\n            return \"#F8F7FA\";\n        } else return \"#25293C\";\n    };\n    return {\n        customColors: {\n            dark: darkColor,\n            main: mainColor,\n            light: lightColor,\n            lightPaperBg: whiteColor,\n            darkPaperBg: darkPaperBgColor,\n            bodyBg: mode === \"light\" ? \"#F8F7FA\" : \"#25293C\",\n            trackBg: mode === \"light\" ? \"#F1F0F2\" : \"#363B54\",\n            avatarBg: mode === \"light\" ? \"#DBDADE\" : \"#4A5072\",\n            tableHeaderBg: mode === \"light\" ? \"#F6F6F7\" : \"#4A5072\"\n        },\n        mode: mode,\n        common: {\n            black: \"#000\",\n            white: whiteColor\n        },\n        primary: {\n            light: \"#29B3FB\",\n            main: \"#29B3FB\",\n            dark: \"##29B3FB#29B3FB\",\n            contrastText: whiteColor\n        },\n        secondary: {\n            light: \"#B2B4B8\",\n            main: \"#A8AAAE\",\n            dark: \"#949699\",\n            contrastText: whiteColor\n        },\n        error: {\n            light: \"#ED6F70\",\n            main: \"#EA5455\",\n            dark: \"#CE4A4B\",\n            contrastText: whiteColor\n        },\n        warning: {\n            light: \"#FFAB5A\",\n            main: \"#FF9F43\",\n            dark: \"#E08C3B\",\n            contrastText: whiteColor\n        },\n        info: {\n            light: \"#1FD5EB\",\n            main: \"#00CFE8\",\n            dark: \"#00B6CC\",\n            contrastText: whiteColor\n        },\n        success: {\n            light: \"#42CE80\",\n            main: \"#28C76F\",\n            dark: \"#23AF62\",\n            contrastText: whiteColor\n        },\n        grey: {\n            50: \"#FAFAFA\",\n            100: \"#F5F5F5\",\n            200: \"#EEEEEE\",\n            300: \"#E0E0E0\",\n            400: \"#BDBDBD\",\n            500: \"#9E9E9E\",\n            600: \"#757575\",\n            700: \"#616161\",\n            800: \"#424242\",\n            900: \"#212121\",\n            A100: \"#F5F5F5\",\n            A200: \"#EEEEEE\",\n            A400: \"#BDBDBD\",\n            A700: \"#616161\"\n        },\n        text: {\n            primary: \"rgba(\".concat(mainColor, \", 0.78)\"),\n            secondary: \"rgba(\".concat(mainColor, \", 0.68)\"),\n            disabled: \"rgba(\".concat(mainColor, \", 0.42)\")\n        },\n        divider: \"rgba(\".concat(mainColor, \", 0.16)\"),\n        background: {\n            paper: mode === \"light\" ? whiteColor : darkPaperBgColor,\n            default: defaultBgColor()\n        },\n        action: {\n            active: \"rgba(\".concat(mainColor, \", 0.54)\"),\n            hover: \"rgba(\".concat(mainColor, \", 0.04)\"),\n            selected: \"rgba(\".concat(mainColor, \", 0.06)\"),\n            selectedOpacity: 0.06,\n            disabled: \"rgba(\".concat(mainColor, \", 0.26)\"),\n            disabledBackground: \"rgba(\".concat(mainColor, \", 0.12)\"),\n            focus: \"rgba(\".concat(mainColor, \", 0.12)\")\n        }\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (DefaultPalette);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQGNvcmUvdGhlbWUvcGFsZXR0ZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsa0JBQWtCO0FBSWxCLE1BQU1BLGlCQUFpQixDQUFDQyxNQUF1QkMsT0FBd0I7SUFDckUsVUFBVTtJQUNWLE1BQU1DLGFBQWE7SUFDbkIsTUFBTUMsYUFBYTtJQUNuQixNQUFNQyxZQUFZO0lBQ2xCLE1BQU1DLG1CQUFtQjtJQUN6QixNQUFNQyxZQUFZTixTQUFTLFVBQVVHLGFBQWFDLFNBQVM7SUFFM0QsTUFBTUcsaUJBQWlCLElBQU07UUFDM0IsSUFBSU4sU0FBUyxjQUFjRCxTQUFTLFNBQVM7WUFDM0MsT0FBT0U7UUFDVCxPQUFPLElBQUlELFNBQVMsY0FBY0QsU0FBUyxRQUFRO1lBQ2pELE9BQU9LO1FBQ1QsT0FBTyxJQUFJTCxTQUFTLFNBQVM7WUFDM0IsT0FBTztRQUNULE9BQU8sT0FBTztJQUNoQjtJQUVBLE9BQU87UUFDTFEsY0FBYztZQUNaQyxNQUFNTDtZQUNOTSxNQUFNSjtZQUNOSyxPQUFPUjtZQUNQUyxjQUFjVjtZQUNkVyxhQUFhUjtZQUNiUyxRQUFRZCxTQUFTLFVBQVUsWUFBWSxTQUFTO1lBQ2hEZSxTQUFTZixTQUFTLFVBQVUsWUFBWSxTQUFTO1lBQ2pEZ0IsVUFBVWhCLFNBQVMsVUFBVSxZQUFZLFNBQVM7WUFDbERpQixlQUFlakIsU0FBUyxVQUFVLFlBQVksU0FBUztRQUN6RDtRQUNBQSxNQUFNQTtRQUNOa0IsUUFBUTtZQUNOQyxPQUFPO1lBQ1BDLE9BQU9sQjtRQUNUO1FBQ0FtQixTQUFTO1lBQ1BWLE9BQU87WUFDUEQsTUFBTTtZQUNORCxNQUFNO1lBQ05hLGNBQWNwQjtRQUNoQjtRQUNBcUIsV0FBVztZQUNUWixPQUFPO1lBQ1BELE1BQU07WUFDTkQsTUFBTTtZQUNOYSxjQUFjcEI7UUFDaEI7UUFDQXNCLE9BQU87WUFDTGIsT0FBTztZQUNQRCxNQUFNO1lBQ05ELE1BQU07WUFDTmEsY0FBY3BCO1FBQ2hCO1FBQ0F1QixTQUFTO1lBQ1BkLE9BQU87WUFDUEQsTUFBTTtZQUNORCxNQUFNO1lBQ05hLGNBQWNwQjtRQUNoQjtRQUNBd0IsTUFBTTtZQUNKZixPQUFPO1lBQ1BELE1BQU07WUFDTkQsTUFBTTtZQUNOYSxjQUFjcEI7UUFDaEI7UUFDQXlCLFNBQVM7WUFDUGhCLE9BQU87WUFDUEQsTUFBTTtZQUNORCxNQUFNO1lBQ05hLGNBQWNwQjtRQUNoQjtRQUNBMEIsTUFBTTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTEMsTUFBTTtZQUNOQyxNQUFNO1lBQ05DLE1BQU07WUFDTkMsTUFBTTtRQUNSO1FBQ0FDLE1BQU07WUFDSlosU0FBUyxRQUFrQixPQUFWZixXQUFVO1lBQzNCaUIsV0FBVyxRQUFrQixPQUFWakIsV0FBVTtZQUM3QjRCLFVBQVUsUUFBa0IsT0FBVjVCLFdBQVU7UUFDOUI7UUFDQTZCLFNBQVMsUUFBa0IsT0FBVjdCLFdBQVU7UUFDM0I4QixZQUFZO1lBQ1ZDLE9BQU9yQyxTQUFTLFVBQVVFLGFBQWFHLGdCQUFnQjtZQUN2RGlDLFNBQVMvQjtRQUNYO1FBQ0FnQyxRQUFRO1lBQ05DLFFBQVEsUUFBa0IsT0FBVmxDLFdBQVU7WUFDMUJtQyxPQUFPLFFBQWtCLE9BQVZuQyxXQUFVO1lBQ3pCb0MsVUFBVSxRQUFrQixPQUFWcEMsV0FBVTtZQUM1QnFDLGlCQUFpQjtZQUNqQlQsVUFBVSxRQUFrQixPQUFWNUIsV0FBVTtZQUM1QnNDLG9CQUFvQixRQUFrQixPQUFWdEMsV0FBVTtZQUN0Q3VDLE9BQU8sUUFBa0IsT0FBVnZDLFdBQVU7UUFDM0I7SUFDRjtBQUNGO0FBRUEsK0RBQWVQLGNBQWNBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL0Bjb3JlL3RoZW1lL3BhbGV0dGUvaW5kZXgudHM/OTZkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAqKiBUeXBlIEltcG9ydHNcclxuaW1wb3J0IHsgUGFsZXR0ZSB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnXHJcbmltcG9ydCB7IFNraW4gfSBmcm9tICdzcmMvQGNvcmUvbGF5b3V0cy90eXBlcydcclxuXHJcbmNvbnN0IERlZmF1bHRQYWxldHRlID0gKG1vZGU6IFBhbGV0dGVbJ21vZGUnXSwgc2tpbjogU2tpbik6IFBhbGV0dGUgPT4ge1xyXG4gIC8vICoqIFZhcnNcclxuICBjb25zdCB3aGl0ZUNvbG9yID0gJyNGRkYnXHJcbiAgY29uc3QgbGlnaHRDb2xvciA9ICc0NywgNDMsIDYxJ1xyXG4gIGNvbnN0IGRhcmtDb2xvciA9ICcyMDgsIDIxMiwgMjQxJ1xyXG4gIGNvbnN0IGRhcmtQYXBlckJnQ29sb3IgPSAnIzJGMzM0OSdcclxuICBjb25zdCBtYWluQ29sb3IgPSBtb2RlID09PSAnbGlnaHQnID8gbGlnaHRDb2xvciA6IGRhcmtDb2xvclxyXG5cclxuICBjb25zdCBkZWZhdWx0QmdDb2xvciA9ICgpID0+IHtcclxuICAgIGlmIChza2luID09PSAnYm9yZGVyZWQnICYmIG1vZGUgPT09ICdsaWdodCcpIHtcclxuICAgICAgcmV0dXJuIHdoaXRlQ29sb3JcclxuICAgIH0gZWxzZSBpZiAoc2tpbiA9PT0gJ2JvcmRlcmVkJyAmJiBtb2RlID09PSAnZGFyaycpIHtcclxuICAgICAgcmV0dXJuIGRhcmtQYXBlckJnQ29sb3JcclxuICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gJ2xpZ2h0Jykge1xyXG4gICAgICByZXR1cm4gJyNGOEY3RkEnXHJcbiAgICB9IGVsc2UgcmV0dXJuICcjMjUyOTNDJ1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGN1c3RvbUNvbG9yczoge1xyXG4gICAgICBkYXJrOiBkYXJrQ29sb3IsXHJcbiAgICAgIG1haW46IG1haW5Db2xvcixcclxuICAgICAgbGlnaHQ6IGxpZ2h0Q29sb3IsXHJcbiAgICAgIGxpZ2h0UGFwZXJCZzogd2hpdGVDb2xvcixcclxuICAgICAgZGFya1BhcGVyQmc6IGRhcmtQYXBlckJnQ29sb3IsXHJcbiAgICAgIGJvZHlCZzogbW9kZSA9PT0gJ2xpZ2h0JyA/ICcjRjhGN0ZBJyA6ICcjMjUyOTNDJywgLy8gU2FtZSBhcyBwYWxldHRlLmJhY2tncm91bmQuZGVmYXVsdCBidXQgZG9lc24ndCBjb25zaWRlciBib3JkZXJlZCBza2luXHJcbiAgICAgIHRyYWNrQmc6IG1vZGUgPT09ICdsaWdodCcgPyAnI0YxRjBGMicgOiAnIzM2M0I1NCcsXHJcbiAgICAgIGF2YXRhckJnOiBtb2RlID09PSAnbGlnaHQnID8gJyNEQkRBREUnIDogJyM0QTUwNzInLFxyXG4gICAgICB0YWJsZUhlYWRlckJnOiBtb2RlID09PSAnbGlnaHQnID8gJyNGNkY2RjcnIDogJyM0QTUwNzInXHJcbiAgICB9LFxyXG4gICAgbW9kZTogbW9kZSxcclxuICAgIGNvbW1vbjoge1xyXG4gICAgICBibGFjazogJyMwMDAnLFxyXG4gICAgICB3aGl0ZTogd2hpdGVDb2xvclxyXG4gICAgfSxcclxuICAgIHByaW1hcnk6IHtcclxuICAgICAgbGlnaHQ6ICcjMjlCM0ZCJyxcclxuICAgICAgbWFpbjogJyMyOUIzRkInLFxyXG4gICAgICBkYXJrOiAnIyMyOUIzRkIjMjlCM0ZCJyxcclxuICAgICAgY29udHJhc3RUZXh0OiB3aGl0ZUNvbG9yXHJcbiAgICB9LFxyXG4gICAgc2Vjb25kYXJ5OiB7XHJcbiAgICAgIGxpZ2h0OiAnI0IyQjRCOCcsXHJcbiAgICAgIG1haW46ICcjQThBQUFFJyxcclxuICAgICAgZGFyazogJyM5NDk2OTknLFxyXG4gICAgICBjb250cmFzdFRleHQ6IHdoaXRlQ29sb3JcclxuICAgIH0sXHJcbiAgICBlcnJvcjoge1xyXG4gICAgICBsaWdodDogJyNFRDZGNzAnLFxyXG4gICAgICBtYWluOiAnI0VBNTQ1NScsXHJcbiAgICAgIGRhcms6ICcjQ0U0QTRCJyxcclxuICAgICAgY29udHJhc3RUZXh0OiB3aGl0ZUNvbG9yXHJcbiAgICB9LFxyXG4gICAgd2FybmluZzoge1xyXG4gICAgICBsaWdodDogJyNGRkFCNUEnLFxyXG4gICAgICBtYWluOiAnI0ZGOUY0MycsXHJcbiAgICAgIGRhcms6ICcjRTA4QzNCJyxcclxuICAgICAgY29udHJhc3RUZXh0OiB3aGl0ZUNvbG9yXHJcbiAgICB9LFxyXG4gICAgaW5mbzoge1xyXG4gICAgICBsaWdodDogJyMxRkQ1RUInLFxyXG4gICAgICBtYWluOiAnIzAwQ0ZFOCcsXHJcbiAgICAgIGRhcms6ICcjMDBCNkNDJyxcclxuICAgICAgY29udHJhc3RUZXh0OiB3aGl0ZUNvbG9yXHJcbiAgICB9LFxyXG4gICAgc3VjY2Vzczoge1xyXG4gICAgICBsaWdodDogJyM0MkNFODAnLFxyXG4gICAgICBtYWluOiAnIzI4Qzc2RicsXHJcbiAgICAgIGRhcms6ICcjMjNBRjYyJyxcclxuICAgICAgY29udHJhc3RUZXh0OiB3aGl0ZUNvbG9yXHJcbiAgICB9LFxyXG4gICAgZ3JleToge1xyXG4gICAgICA1MDogJyNGQUZBRkEnLFxyXG4gICAgICAxMDA6ICcjRjVGNUY1JyxcclxuICAgICAgMjAwOiAnI0VFRUVFRScsXHJcbiAgICAgIDMwMDogJyNFMEUwRTAnLFxyXG4gICAgICA0MDA6ICcjQkRCREJEJyxcclxuICAgICAgNTAwOiAnIzlFOUU5RScsXHJcbiAgICAgIDYwMDogJyM3NTc1NzUnLFxyXG4gICAgICA3MDA6ICcjNjE2MTYxJyxcclxuICAgICAgODAwOiAnIzQyNDI0MicsXHJcbiAgICAgIDkwMDogJyMyMTIxMjEnLFxyXG4gICAgICBBMTAwOiAnI0Y1RjVGNScsXHJcbiAgICAgIEEyMDA6ICcjRUVFRUVFJyxcclxuICAgICAgQTQwMDogJyNCREJEQkQnLFxyXG4gICAgICBBNzAwOiAnIzYxNjE2MSdcclxuICAgIH0sXHJcbiAgICB0ZXh0OiB7XHJcbiAgICAgIHByaW1hcnk6IGByZ2JhKCR7bWFpbkNvbG9yfSwgMC43OClgLFxyXG4gICAgICBzZWNvbmRhcnk6IGByZ2JhKCR7bWFpbkNvbG9yfSwgMC42OClgLFxyXG4gICAgICBkaXNhYmxlZDogYHJnYmEoJHttYWluQ29sb3J9LCAwLjQyKWBcclxuICAgIH0sXHJcbiAgICBkaXZpZGVyOiBgcmdiYSgke21haW5Db2xvcn0sIDAuMTYpYCxcclxuICAgIGJhY2tncm91bmQ6IHtcclxuICAgICAgcGFwZXI6IG1vZGUgPT09ICdsaWdodCcgPyB3aGl0ZUNvbG9yIDogZGFya1BhcGVyQmdDb2xvcixcclxuICAgICAgZGVmYXVsdDogZGVmYXVsdEJnQ29sb3IoKVxyXG4gICAgfSxcclxuICAgIGFjdGlvbjoge1xyXG4gICAgICBhY3RpdmU6IGByZ2JhKCR7bWFpbkNvbG9yfSwgMC41NClgLFxyXG4gICAgICBob3ZlcjogYHJnYmEoJHttYWluQ29sb3J9LCAwLjA0KWAsXHJcbiAgICAgIHNlbGVjdGVkOiBgcmdiYSgke21haW5Db2xvcn0sIDAuMDYpYCxcclxuICAgICAgc2VsZWN0ZWRPcGFjaXR5OiAwLjA2LFxyXG4gICAgICBkaXNhYmxlZDogYHJnYmEoJHttYWluQ29sb3J9LCAwLjI2KWAsXHJcbiAgICAgIGRpc2FibGVkQmFja2dyb3VuZDogYHJnYmEoJHttYWluQ29sb3J9LCAwLjEyKWAsXHJcbiAgICAgIGZvY3VzOiBgcmdiYSgke21haW5Db2xvcn0sIDAuMTIpYFxyXG4gICAgfVxyXG4gIH0gYXMgUGFsZXR0ZVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBEZWZhdWx0UGFsZXR0ZVxyXG4iXSwibmFtZXMiOlsiRGVmYXVsdFBhbGV0dGUiLCJtb2RlIiwic2tpbiIsIndoaXRlQ29sb3IiLCJsaWdodENvbG9yIiwiZGFya0NvbG9yIiwiZGFya1BhcGVyQmdDb2xvciIsIm1haW5Db2xvciIsImRlZmF1bHRCZ0NvbG9yIiwiY3VzdG9tQ29sb3JzIiwiZGFyayIsIm1haW4iLCJsaWdodCIsImxpZ2h0UGFwZXJCZyIsImRhcmtQYXBlckJnIiwiYm9keUJnIiwidHJhY2tCZyIsImF2YXRhckJnIiwidGFibGVIZWFkZXJCZyIsImNvbW1vbiIsImJsYWNrIiwid2hpdGUiLCJwcmltYXJ5IiwiY29udHJhc3RUZXh0Iiwic2Vjb25kYXJ5IiwiZXJyb3IiLCJ3YXJuaW5nIiwiaW5mbyIsInN1Y2Nlc3MiLCJncmV5IiwiQTEwMCIsIkEyMDAiLCJBNDAwIiwiQTcwMCIsInRleHQiLCJkaXNhYmxlZCIsImRpdmlkZXIiLCJiYWNrZ3JvdW5kIiwicGFwZXIiLCJkZWZhdWx0IiwiYWN0aW9uIiwiYWN0aXZlIiwiaG92ZXIiLCJzZWxlY3RlZCIsInNlbGVjdGVkT3BhY2l0eSIsImRpc2FibGVkQmFja2dyb3VuZCIsImZvY3VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/@core/theme/palette/index.ts\n"));

/***/ })

});